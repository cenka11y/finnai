// SOUAI Chatbot - Intelligent Assistant
// Kullanƒ±cƒ± yardƒ±m ve rehberlik sistemi

const { User, Course, Service } = require('./database');

// Chatbot mesaj kategorileri ve intent tanƒ±ma
const INTENTS = {
    // Selamlama
    GREETING: {
        keywords: ['moi', 'hei', 'terve', 'hello', 'hi', 'merhaba', 'selam'],
        responses: [
            'Moi! SOUAI asistanƒ±nƒ±z burada! Size nasƒ±l yardƒ±mcƒ± olabilirim? üòä',
            'Hei! Ho≈ü geldiniz! SOUAI platformu hakkƒ±nda sorularƒ±nƒ±zƒ± yanƒ±tlayabilirim.',
            'Terve! Size Finlandiya\'da ya≈üam ve Fin dili √∂ƒürenme konularƒ±nda yardƒ±mcƒ± olabilirim.'
        ]
    },

    // Kurs sorularƒ±
    COURSE_INQUIRY: {
        keywords: ['kurs', 'course', 'oppi', 'suomi', 'finnish', '√∂ƒüren', 'study', 'lesson'],
        responses: [
            'Fin dili kurslarƒ±mƒ±z CEFR standartlarƒ±na g√∂re A1\'den B2\'ye kadar seviyelerde mevcut. Hangi seviyede ba≈ülamak istersiniz?',
            'Mevcut kurslarƒ±mƒ±zƒ± g√∂rmek i√ßin kurs listesini kontrol edebilirsiniz. Size uygun seviyeyi tespit etmek i√ßin seviye testiyle ba≈ülayabilirsiniz.'
        ]
    },

    // CV konularƒ±
    CV_HELP: {
        keywords: ['cv', 'ansioluettelo', 'resume', 'i≈ü', 'work', 'ty√∂', 'hakemus', 'application'],
        responses: [
            'CV Builder ile Finlandiya i≈ü piyasasƒ±na uygun CV\'nizi olu≈üturabilirsiniz. Hem Fince hem ƒ∞ngilizce versiyonlar hazƒ±rlayabiliriz.',
            'Finlandiya\'da i≈ü ba≈üvurusu yaparken CV\'nizde √∂nemli olan detaylarƒ± size rehberlik edebilirim.'
        ]
    },

    // Belediye hizmetleri
    MUNICIPAL_SERVICES: {
        keywords: ['belediye', 'kunta', 'hizmet', 'service', 'maistraatti', 'kela', 'te-palvelut', 'dvv'],
        responses: [
            'Finlandiya\'da √ße≈üitli kamu hizmetleri mevcuttur. Hangi konuda bilgiye ihtiyacƒ±nƒ±z var? (Kela, TE-palvelut, Maistraatti, vb.)',
            'Belediye hizmetleri b√∂l√ºm√ºnden ihtiyacƒ±nƒ±z olan hizmetleri bulabilirsiniz. Size en yakƒ±n hizmet noktalarƒ±nƒ± g√∂sterebilirim.'
        ]
    },

    // Dil seviyesi
    LANGUAGE_LEVEL: {
        keywords: ['seviye', 'level', 'a1', 'a2', 'b1', 'b2', 'c1', 'c2', 'cefr', 'testi', 'test'],
        responses: [
            'CEFR seviye sistemi: A1-A2 (Temel), B1-B2 (Orta), C1-C2 (ƒ∞leri). Hangi seviyedesiniz?',
            'Seviye testimizle mevcut Fin dili seviyenizi belirleyebilir ve size uygun kurslarƒ± √∂nerebilirim.'
        ]
    },

    // Genel yardƒ±m
    HELP: {
        keywords: ['yardƒ±m', 'help', 'apu', 'nasƒ±l', 'how', 'ne', 'what', 'miten', 'mik√§'],
        responses: [
            'Size ≈üu konularda yardƒ±mcƒ± olabilirim:\n‚Ä¢ Fin dili kurslarƒ±\n‚Ä¢ CV hazƒ±rlama\n‚Ä¢ Belediye hizmetleri\n‚Ä¢ Finlandiya ya≈üam rehberliƒüi\n\nHangi konuda yardƒ±ma ihtiyacƒ±nƒ±z var?',
            'SOUAI platformunda kaybolmu≈ü gibi mi hissediyorsunuz? Size adƒ±m adƒ±m rehberlik edebilirim!'
        ]
    },

    // Finlandiya ya≈üam
    LIFE_IN_FINLAND: {
        keywords: ['finlandiya', 'finland', 'suomi', 'ya≈üam', 'life', 'el√§m√§', 'k√ºlt√ºr', 'culture'],
        responses: [
            'Finlandiya\'da ya≈üam hakkƒ±nda merak ettiklerinizi yanƒ±tlayabilirim. Sosyal haklar, i≈ü bulma, eƒüitim sistemi gibi konularda yardƒ±mcƒ± olabilirim.',
            'Finlandiya\'ya yeni gelmi≈ü gibi g√∂r√ºn√ºyorsunuz! Size en √∂nemli bilgileri payla≈üabilirim.'
        ]
    }
};

// Intent tanƒ±ma fonksiyonu
function detectIntent(message) {
    const cleanMessage = message.toLowerCase().trim();
    
    for (const [intentName, intent] of Object.entries(INTENTS)) {
        for (const keyword of intent.keywords) {
            if (cleanMessage.includes(keyword)) {
                return {
                    intent: intentName,
                    confidence: 0.8,
                    responses: intent.responses
                };
            }
        }
    }
    
    return {
        intent: 'UNKNOWN',
        confidence: 0.1,
        responses: [
            '√ñz√ºr dilerim, bu konuda size nasƒ±l yardƒ±mcƒ± olacaƒüƒ±mƒ± tam anlayamadƒ±m. ≈ûu konularda yardƒ±mcƒ± olabilirim: kurslar, CV, belediye hizmetleri, Finlandiya ya≈üamƒ±.',
            'Bu sorunuzu daha a√ßƒ±k bir ≈üekilde sorabilir misiniz? Size en iyi ≈üekilde yardƒ±mcƒ± olmak istiyorum! üòä'
        ]
    };
}

// √ñzelle≈ütirilmi≈ü yanƒ±t olu≈üturma
async function generatePersonalizedResponse(intent, message, userId = null) {
    let response = intent.responses[Math.floor(Math.random() * intent.responses.length)];
    
    // Kullanƒ±cƒ± varsa ki≈üiselle≈ütirilmi≈ü √∂neriler
    if (userId) {
        try {
            const user = await User.findById(userId);
            const profile = await User.getProfile(userId);
            
            if (intent.intent === 'COURSE_INQUIRY') {
                const courses = await Course.findAll();
                const userLevel = profile?.currentCEFRLevel || 'A1';
                const recommendedCourse = courses.find(c => c.cefrLevel === userLevel);
                
                if (recommendedCourse) {
                    response += `\n\nüí° Size √∂zel √∂neri: "${recommendedCourse.title.fi}" kursu seviyenize uygun g√∂r√ºn√ºyor!`;
                }
            }
            
            if (intent.intent === 'MUNICIPAL_SERVICES') {
                const services = await Service.findAll({ 
                    city: profile?.city || 'Helsinki' 
                });
                
                if (services.length > 0) {
                    response += `\n\nüìç ${profile?.city || 'Helsinki'} i√ßin ${services.length} hizmet bulundu.`;
                }
            }
            
        } catch (error) {
            console.log('User data fetch error:', error);
        }
    }
    
    return response;
}

// FAQ database
const FAQ_DATA = [
    {
        question: "SOUAI platformu nedir?",
        answer: "SOUAI, Finlandiya'da ya≈üayan g√∂√ßmenler i√ßin kapsamlƒ± bir dijital platform. Fin dili √∂ƒürenme, i≈ü bulma ve g√ºnl√ºk ya≈üam konularƒ±nda yardƒ±m saƒülar."
    },
    {
        question: "Kurslar √ºcretsiz mi?",
        answer: "Evet! T√ºm Fin dili kurslarƒ±mƒ±z √ºcretsizdir. Finlandiya devletinin desteƒüiyle sunulmaktadƒ±r."
    },
    {
        question: "Seviye testini nasƒ±l yapabilirim?",
        answer: "Ana sayfadan 'Seviye Testi' butonuna tƒ±klayarak 15 dakikalƒ±k deƒüerlendirmeyi tamamlayabilirsiniz."
    },
    {
        question: "CV'mi nasƒ±l olu≈ütururum?",
        answer: "CV Builder b√∂l√ºm√ºne giderek adƒ±m adƒ±m CV'nizi olu≈üturabilirsiniz. Hem Fince hem ƒ∞ngilizce versiyonlar hazƒ±rlayabilirsiniz."
    },
    {
        question: "Belediye hizmetleri nasƒ±l bulurum?",
        answer: "Hizmetler b√∂l√ºm√ºnden ≈üehrinizi se√ßerek size en yakƒ±n kamu hizmetlerini g√∂r√ºnt√ºleyebilirsiniz."
    }
];

// FAQ arama
function searchFAQ(query) {
    const results = FAQ_DATA.filter(faq => 
        faq.question.toLowerCase().includes(query.toLowerCase()) ||
        faq.answer.toLowerCase().includes(query.toLowerCase())
    );
    
    return results.slice(0, 3); // En fazla 3 sonu√ß
}

// Ana chatbot i≈üleyici
async function processChatMessage(message, userId = null, sessionId = null) {
    try {
        // Intent tanƒ±ma
        const intent = detectIntent(message);
        
        // Ki≈üiselle≈ütirilmi≈ü yanƒ±t olu≈ütur
        const response = await generatePersonalizedResponse(intent, message, userId);
        
        // FAQ arama (d√º≈ü√ºk g√ºven durumunda)
        let faqResults = [];
        if (intent.confidence < 0.5) {
            faqResults = searchFAQ(message);
        }
        
        // √ñneri aksiyonlarƒ±
        const suggestedActions = getSuggestedActions(intent.intent);
        
        return {
            success: true,
            response: response,
            intent: intent.intent,
            confidence: intent.confidence,
            faqResults: faqResults,
            suggestedActions: suggestedActions,
            timestamp: new Date().toISOString()
        };
        
    } catch (error) {
        console.error('Chatbot error:', error);
        return {
            success: false,
            response: '√ñz√ºr dilerim, ≈üu anda teknik bir sorun ya≈üƒ±yorum. L√ºtfen daha sonra tekrar deneyin.',
            error: error.message
        };
    }
}

// √ñneri aksiyonlarƒ±
function getSuggestedActions(intent) {
    const actions = {
        'GREETING': [
            { text: 'Kurs Ara', action: 'view_courses' },
            { text: 'Seviye Testi', action: 'take_assessment' },
            { text: 'CV Olu≈ütur', action: 'create_cv' }
        ],
        'COURSE_INQUIRY': [
            { text: 'Kurslarƒ± G√∂r√ºnt√ºle', action: 'view_courses' },
            { text: 'Seviye Testi Yap', action: 'take_assessment' }
        ],
        'CV_HELP': [
            { text: 'CV Builder', action: 'create_cv' },
            { text: 'CV √ñrnekleri', action: 'view_cv_examples' }
        ],
        'MUNICIPAL_SERVICES': [
            { text: 'Hizmetleri G√∂r√ºnt√ºle', action: 'view_services' },
            { text: '≈ûehir Se√ß', action: 'select_city' }
        ],
        'HELP': [
            { text: 'Kullanƒ±m Kƒ±lavuzu', action: 'view_guide' },
            { text: 'SSS', action: 'view_faq' }
        ]
    };
    
    return actions[intent] || [
        { text: 'Ana Sayfa', action: 'home' },
        { text: 'Yardƒ±m', action: 'help' }
    ];
}

module.exports = {
    processChatMessage,
    detectIntent,
    searchFAQ,
    FAQ_DATA
};